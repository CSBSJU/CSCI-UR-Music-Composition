bash before use

After collecting data, I cleaned it using: 

for file in *.krn ; do extract -i '**kern' $file > extract/$file ; done

This eliminated all none musical spines within the kern representation. Then, I got the melodic intervals for each using this command:

for file in *.krn ; do mint $file > mint/int_$file ; done

to store variable: a=$(grep -c '[Mm]3' mint/int_echo.krn)

for file in *.krn ; do t=$(grep -o '[MmPAd]' mint/int_$file | wc -w) ; a=$(grep -o '[MmPAd]1' mint/int_$file | wc -w) ; b=$(grep -o '[MmPAd]2' mint/int_$file | wc -w) ; c=$(grep -o '[MmPAd]3' mint/int_$file | wc -w) ; d=$(grep -o '[MmPAd]4' mint/int_$file | wc -w) ; e=$(grep -o '[MmPAd]5' mint/int_$file | wc -w) ; f=$(grep -o '[MmPAd]6' mint/int_$file | wc -w) ; g=$(grep -o '[MmPAd]7' mint/int_$file | wc -w) ; h=$(grep -o '[MmPAd]8' mint/int_$file | wc -w) ;echo $a/$t','$c/$t','$e/$t','$h/$t', Test'>>test ; done

for file in *.krn ; do t=$(grep -o '[MmPAd]' mint/int_$file | wc -w) ; a=$(grep -o '[MmPAd]1' mint/int_$file | wc -w) ; b=$(grep -o '[MmPAd]2' mint/int_$file | wc -w) ; c=$(grep -o '[MmPAd]3' mint/int_$file | wc -w) ; d=$(grep -o '[MmPAd]4' mint/int_$file | wc -w) ; e=$(grep -o '[MmPAd]5' mint/int_$file | wc -w) ; f=$(grep -o '[MmPAd]6' mint/int_$file | wc -w) ; g=$(grep -o '[MmPAd]7' mint/int_$file | wc -w) ; h=$(grep -o '[MmPAd]8' mint/int_$file | wc -w) ; ar=($a $b $c $d $e $f $g $h) ; IFS=$'\n' ; i=$(echo "${ar[*]}" | sort -nr | head -n1) ; echo $a/$t','$c/$t','$e/$t','$h/$t', '$i/$t', Test'>>test ; done

t= total, a= steps b = 2s c= thirds d= 4ths e = fifths f = sixths g = 7ths h = octaves

ar=($a $b $c $d $e $f $g $h) ; IFS=$'\n' ; echo "${ar[*]}" | sort -nr | head -n1


( printf '%s\n' "${ar[@]}" | sort -nr | head -n1)
ar=($a $b $c $d $e $f $g $h) ; IFS=$'\n' ; i=$( printf '%s\n' "${ar[@]}" | sort -nr | head -n1)

for file in *.krn ; do t=$(grep -o '[MmPAd]' mint/int_$file | wc -w) ; a=$(grep -o '[MmPAd]1' mint/int_$file | wc -w) ; b=$(grep -o '[MmPAd]2' mint/int_$file | wc -w) ; c=$(grep -o '[MmPAd]3' mint/int_$file | wc -w) ; d=$(grep -o '[MmPAd]4' mint/int_$file | wc -w) ; e=$(grep -o '[MmPAd]5' mint/int_$file | wc -w) ; f=$(grep -o '[MmPAd]6' mint/int_$file | wc -w) ; g=$(grep -o '[MmPAd]7' mint/int_$file | wc -w) ; h=$(grep -o '[MmPAd]8' mint/int_$file | wc -w) ; ar=($a $b $c $d $e $f $g $h) ; IFS=$'\n' ; i=$(echo "${ar[*]}" | sort -nr | head -n1) ; echo $a/$t','$b/$t','$c/$t','$d/$t','$e/$t', '$f/$t','$g/$t','$h/$t','$i/$t', Medieval'>>../TrainingSet.arff ; done

$(( x + y ))

for file in *.krn ; do t=$(grep -o '[MmPAd]' mint/int_$file | wc -w) ; a=$(grep -o '[MmPAd]1' mint/int_$file | wc -w) ; b=$(grep -o '[MmPAd]2' mint/int_$file | wc -w) ; c=$(grep -o '[MmPAd]3' mint/int_$file | wc -w) ; d=$(grep -o '[MmPAd]4' mint/int_$file | wc -w) ; e=$(grep -o '[MmPAd]5' mint/int_$file | wc -w) ; f=$(grep -o '[MmPAd]6' mint/int_$file | wc -w) ; g=$(grep -o '[MmPAd]7' mint/int_$file | wc -w) ; h=$(grep -o '[MmPAd]8' mint/int_$file | wc -w) ; ar=($a $b $c $d $e $f $g $h) ; IFS=$'\n' ; i=$(echo "${ar[*]}" | sort -nr | head -n1) ; echo $(bc -l <<< "($i/$t)")','$b/$t','$c/$t','$d/$t','$e/$t', '$f/$t','$g/$t','$h/$t','$i/$t', Medieval'>>test ; done

bc -l <<< "1 - (($m - 20) / 34)"
echo $(bc -l <<< "($i/$t)")

for file in *.krn ; do t=$(grep -o '[MmPAd]' mint/int_$file | wc -w) ; a=$(grep -o '[MmPAd]1' mint/int_$file | wc -w) ; b=$(grep -o '[MmPAd]2' mint/int_$file | wc -w) ; c=$(grep -o '[MmPAd]3' mint/int_$file | wc -w) ; d=$(grep -o '[MmPAd]4' mint/int_$file | wc -w) ; e=$(grep -o '[MmPAd]5' mint/int_$file | wc -w) ; f=$(grep -o '[MmPAd]6' mint/int_$file | wc -w) ; g=$(grep -o '[MmPAd]7' mint/int_$file | wc -w) ; h=$(grep -o '[MmPAd]8' mint/int_$file | wc -w) ; ar=($a $b $c $d $e $f $g $h) ; IFS=$'\n' ; i=$(echo "${ar[*]}" | sort -nr | head -n1) ; echo $(bc -l <<< "($a/$t)")','$(bc -l <<< "($b/$t)")','$(bc -l <<< "($c/$t)")','$(bc -l <<< "($d/$t)")','$(bc -l <<< "($e/$t)")','$(bc -l <<< "($f/$t)")','$(bc -l <<< "($g/$t)")','$(bc -l <<< "($h/$t)")','$(bc -l <<< "($i/$t)")',Medieval'>>../TrainingSet.arff ; done

for file in *.krn ; do t=$(grep -o -i '[0-9][a-g]' $file | wc -w) ; done

for file in *.krn ; do t=$(grep -o -i '[0-9][a-g]' $file | wc -w) ; done

grep -o -i [0-9]'\.'*a echo.krn | wc -w

for file in *.krn ; do t2=$(grep -o -i '[0-9][a-g]' $file | wc -w) ; a2=$(grep -o -i [0-9]'\.'*a $file | wc -w) ; b2=$(grep -o -i [0-9]'\.'*b $file | wc -w) ; c2=$(grep -o -i [0-9]'\.'*c $file | wc -w) ; d2=$(grep -o -i [0-9]'\.'*d $file | wc -w) ; e2=$(grep -o -i [0-9]'\.'*e $file | wc -w) ; f2=$(grep -o -i [0-9]'\.'*f $file | wc -w) ; g2=$(grep -o -i [0-9]'\.'*g $file | wc -w) ; ar2=($a2 $b2 $c2 $d2 $e2 $f2 $g2) ; IFS=$'\n' ; i2=$(echo "${ar2[*]}" | sort -nr | head -n1) ; echo $(bc -l <<< "($i2/$t2)")',Test'; done

Combining intervals and notes: 

for file in *.krn ; do t=$(grep -o '[MmPAd]' mint/int_$file | wc -w) ; a=$(grep -o '[MmPAd]1' mint/int_$file | wc -w) ; b=$(grep -o '[MmPAd]2' mint/int_$file | wc -w) ; c=$(grep -o '[MmPAd]3' mint/int_$file | wc -w) ; d=$(grep -o '[MmPAd]4' mint/int_$file | wc -w) ; e=$(grep -o '[MmPAd]5' mint/int_$file | wc -w) ; f=$(grep -o '[MmPAd]6' mint/int_$file | wc -w) ; g=$(grep -o '[MmPAd]7' mint/int_$file | wc -w) ; h=$(grep -o '[MmPAd]8' mint/int_$file | wc -w) ; ar=($a $b $c $d $e $f $g $h) ; IFS=$'\n' ; i=$(echo "${ar[*]}" | sort -nr | head -n1) ; t2=$(grep -o -i '[0-9][a-g]' $file | wc -w) ; a2=$(grep -o -i [0-9]'\.'*a $file | wc -w) ; b2=$(grep -o -i [0-9]'\.'*b $file | wc -w) ; c2=$(grep -o -i [0-9]'\.'*c $file | wc -w) ; d2=$(grep -o -i [0-9]'\.'*d $file | wc -w) ; e2=$(grep -o -i [0-9]'\.'*e $file | wc -w) ; f2=$(grep -o -i [0-9]'\.'*f $file | wc -w) ; g2=$(grep -o -i [0-9]'\.'*g $file | wc -w) ; ar2=($a2 $b2 $c2 $d2 $e2 $f2 $g2) ; IFS=$'\n' ; i2=$(echo "${ar2[*]}" | sort -nr | head -n1) ; echo $(bc -l <<< "($a/$t)")','$(bc -l <<< "($b/$t)")','$(bc -l <<< "($c/$t)")','$(bc -l <<< "($d/$t)")','$(bc -l <<< "($e/$t)")','$(bc -l <<< "($f/$t)")','$(bc -l <<< "($g/$t)")','$(bc -l <<< "($h/$t)")','$(bc -l <<< "($i/$t)")','$(bc -l <<< "($i2/$t2)")',Test'>>TrainingSet.arff ; done

for file in *.krn ; do t=$(grep -o '[MmPAd]' mint/int_$file | wc -w) ; a=$(grep -o '[MmPAd]1' mint/int_$file | wc -w) ; b=$(grep -o '[MmPAd]2' mint/int_$file | wc -w) ; c=$(grep -o '[MmPAd]3' mint/int_$file | wc -w) ; d=$(grep -o '[MmPAd]4' mint/int_$file | wc -w) ; e=$(grep -o '[MmPAd]5' mint/int_$file | wc -w) ; f=$(grep -o '[MmPAd]6' mint/int_$file | wc -w) ; g=$(grep -o '[MmPAd]7' mint/int_$file | wc -w) ; h=$(grep -o '[MmPAd]8' mint/int_$file | wc -w) ; ar=($a $b $c $d $e $f $g $h) ; IFS=$'\n' ; i=$(echo "${ar[*]}" | sort -nr | head -n1) ; t2=$(grep -o -i '[0-9][a-g]' $file | wc -w) ; a2=$(grep -o -i [0-9]'\.'*a $file | wc -w) ; b2=$(grep -o -i [0-9]'\.'*b $file | wc -w) ; c2=$(grep -o -i [0-9]'\.'*c $file | wc -w) ; d2=$(grep -o -i [0-9]'\.'*d $file | wc -w) ; e2=$(grep -o -i [0-9]'\.'*e $file | wc -w) ; f2=$(grep -o -i [0-9]'\.'*f $file | wc -w) ; g2=$(grep -o -i [0-9]'\.'*g $file | wc -w) ; ar2=($a2 $b2 $c2 $d2 $e2 $f2 $g2) ; IFS=$'\n' ; i2=$(echo "${ar2[*]}" | sort -nr | head -n1) ; echo $(bc -l <<< "($a/$t)")','$(bc -l <<< "($b/$t)")','$(bc -l <<< "($c/$t)")','$(bc -l <<< "($d/$t)")','$(bc -l <<< "($e/$t)")','$(bc -l <<< "($f/$t)")','$(bc -l <<< "($g/$t)")','$(bc -l <<< "($h/$t)")','$(bc -l <<< "($i/$t)")','$(bc -l <<< "($i2/$t2)")',Medieval'>>../TrainingSet.arff ; done

for file in *.krn ; do t=$(grep -o '[MmPAd]' mint/int_$file | wc -w) ; a=$(grep -o '[MmPAd]1' mint/int_$file | wc -w) ; b=$(grep -o '[MmPAd]2' mint/int_$file | wc -w) ; c=$(grep -o '[MmPAd]3' mint/int_$file | wc -w) ; d=$(grep -o '[MmPAd]4' mint/int_$file | wc -w) ; e=$(grep -o '[MmPAd]5' mint/int_$file | wc -w) ; f=$(grep -o '[MmPAd]6' mint/int_$file | wc -w) ; g=$(grep -o '[MmPAd]7' mint/int_$file | wc -w) ; h=$(grep -o '[MmPAd]8' mint/int_$file | wc -w) ; ar=($a $b $c $d $e $f $g $h) ; IFS=$'\n' ; i=$(echo "${ar[*]}" | sort -nr | head -n1) ; j=$(echo "${ar[*]}" | sort -nr | head -n2 | tail -1) ; t2=$(grep -o -i '[0-9][a-g]' $file | wc -w) ; a2=$(grep -o -i [0-9]'\.'*a $file | wc -w) ; b2=$(grep -o -i [0-9]'\.'*b $file | wc -w) ; c2=$(grep -o -i [0-9]'\.'*c $file | wc -w) ; d2=$(grep -o -i [0-9]'\.'*d $file | wc -w) ; e2=$(grep -o -i [0-9]'\.'*e $file | wc -w) ; f2=$(grep -o -i [0-9]'\.'*f $file | wc -w) ; g2=$(grep -o -i [0-9]'\.'*g $file | wc -w) ; ar2=($a2 $b2 $c2 $d2 $e2 $f2 $g2) ; IFS=$'\n' ; i2=$(echo "${ar2[*]}" | sort -nr | head -n1) ; j2=$(echo "${ar2[*]}" | sort -nr | head -n2 | tail -1) ; echo $(bc -l <<< "($a/$t)")','$(bc -l <<< "($b/$t)")','$(bc -l <<< "($c/$t)")','$(bc -l <<< "($d/$t)")','$(bc -l <<< "($e/$t)")','$(bc -l <<< "($f/$t)")','$(bc -l <<< "($g/$t)")','$(bc -l <<< "($h/$t)")','$(bc -l <<< "($i/$t)")','$(bc -l <<< "($a2/$t2)")','$(bc -l <<< "($b2/$t2)")','$(bc -l <<< "($c2/$t2)")','$(bc -l <<< "($d2/$t2)")','$(bc -l <<< "($e2/$t2)")','$(bc -l <<< "($f2/$t2)")','$(bc -l <<< "($g2/$t2)")','$(bc -l <<< "($i2/$t2)")','$(bc -l <<< "($j/$i)")','$(bc -l <<< "($j2/$i2)")',Medieval'>>../TrainingSet.arff ; done

for file in *.krn ; do t=$(grep -o '[MmPAd]' mint/int_$file | wc -w) ; a3=$(grep -o '[M][0-9]' mint/int_$file | wc -w) ; b3=$(grep -o '[m][0-9]' mint/int_$file | wc -w) ; c3=$(grep -o '[P][0-9]' mint/int_$file | wc -w) ; d3=$(grep -o '[A][0-9]' mint/int_$file | wc -w) ; e3=$(grep -o '[d][0-9]' mint/int_$file | wc -w) ; echo $(bc -l <<< "($a3/$t)")','$(bc -l <<< "($b3/$t)")','$(bc -l <<< "($c3/$t)")','$(bc -l <<< "($d3/$t)")','$(bc -l <<< "($e3/$t)") ; done

for file in *.krn ; do t=$(grep -o '[MmPAd]' mint/int_$file | wc -w) ; a=$(grep -o '[MmPAd]1' mint/int_$file | wc -w) ; b=$(grep -o '[MmPAd]2' mint/int_$file | wc -w) ; c=$(grep -o '[MmPAd]3' mint/int_$file | wc -w) ; d=$(grep -o '[MmPAd]4' mint/int_$file | wc -w) ; e=$(grep -o '[MmPAd]5' mint/int_$file | wc -w) ; f=$(grep -o '[MmPAd]6' mint/int_$file | wc -w) ; g=$(grep -o '[MmPAd]7' mint/int_$file | wc -w) ; h=$(grep -o '[MmPAd]8' mint/int_$file | wc -w) ; ar=($a $b $c $d $e $f $g $h) ; IFS=$'\n' ; i=$(echo "${ar[*]}" | sort -nr | head -n1) ; j=$(echo "${ar[*]}" | sort -nr | head -n2 | tail -1) ; t2=$(grep -o -i '[0-9][a-g]' $file | wc -w) ; a2=$(grep -o -i [0-9]'\.'*a $file | wc -w) ; b2=$(grep -o -i [0-9]'\.'*b $file | wc -w) ; c2=$(grep -o -i [0-9]'\.'*c $file | wc -w) ; d2=$(grep -o -i [0-9]'\.'*d $file | wc -w) ; e2=$(grep -o -i [0-9]'\.'*e $file | wc -w) ; f2=$(grep -o -i [0-9]'\.'*f $file | wc -w) ; g2=$(grep -o -i [0-9]'\.'*g $file | wc -w) ; ar2=($a2 $b2 $c2 $d2 $e2 $f2 $g2) ; IFS=$'\n' ; i2=$(echo "${ar2[*]}" | sort -nr | head -n1) ; j2=$(echo "${ar2[*]}" | sort -nr | head -n2 | tail -1) ; a3=$(grep -o '[M][0-9]' mint/int_$file | wc -w) ; b3=$(grep -o '[m][0-9]' mint/int_$file | wc -w) ; c3=$(grep -o '[P][0-9]' mint/int_$file | wc -w) ; d3=$(grep -o '[A][0-9]' mint/int_$file | wc -w) ; e3=$(grep -o '[d][0-9]' mint/int_$file | wc -w) ; echo $(bc -l <<< "($a/$t)")','$(bc -l <<< "($b/$t)")','$(bc -l <<< "($c/$t)")','$(bc -l <<< "($d/$t)")','$(bc -l <<< "($e/$t)")','$(bc -l <<< "($f/$t)")','$(bc -l <<< "($g/$t)")','$(bc -l <<< "($h/$t)")','$(bc -l <<< "($i/$t)")','$(bc -l <<< "($a2/$t2)")','$(bc -l <<< "($b2/$t2)")','$(bc -l <<< "($c2/$t2)")','$(bc -l <<< "($d2/$t2)")','$(bc -l <<< "($e2/$t2)")','$(bc -l <<< "($f2/$t2)")','$(bc -l <<< "($g2/$t2)")','$(bc -l <<< "($i2/$t2)")','$(bc -l <<< "($j/$i)")','$(bc -l <<< "($j2/$i2)")','$(bc -l <<< "($a3/$t)")','$(bc -l <<< "($b3/$t)")','$(bc -l <<< "($c3/$t)")','$(bc -l <<< "($d3/$t)")','$(bc -l <<< "($e3/$t)")',Medieval'>>../TrainingSet.arff ; done

for file in *.krn ; do t=$(grep -o '[MmPAd]' mint/int_$file | wc -w) ; a=$(grep -o '[MmPAd]1' mint/int_$file | wc -w) ; b=$(grep -o '[MmPAd]2' mint/int_$file | wc -w) ; c=$(grep -o '[MmPAd]3' mint/int_$file | wc -w) ; d=$(grep -o '[MmPAd]4' mint/int_$file | wc -w) ; e=$(grep -o '[MmPAd]5' mint/int_$file | wc -w) ; f=$(grep -o '[MmPAd]6' mint/int_$file | wc -w) ; g=$(grep -o '[MmPAd]7' mint/int_$file | wc -w) ; h=$(grep -o '[MmPAd]8' mint/int_$file | wc -w) ; ar=($a $b $c $d $e $f $g $h) ; IFS=$'\n' ; i=$(echo "${ar[*]}" | sort -nr | head -n1) ; j=$(echo "${ar[*]}" | sort -nr | head -n2 | tail -1) ; t2=$(grep -o -i '[0-9][a-g]' $file | wc -w) ; a2=$(grep -o -i [0-9]'\.'*a $file | wc -w) ; b2=$(grep -o -i [0-9]'\.'*b $file | wc -w) ; c2=$(grep -o -i [0-9]'\.'*c $file | wc -w) ; d2=$(grep -o -i [0-9]'\.'*d $file | wc -w) ; e2=$(grep -o -i [0-9]'\.'*e $file | wc -w) ; f2=$(grep -o -i [0-9]'\.'*f $file | wc -w) ; g2=$(grep -o -i [0-9]'\.'*g $file | wc -w) ; ar2=($a2 $b2 $c2 $d2 $e2 $f2 $g2) ; IFS=$'\n' ; i2=$(echo "${ar2[*]}" | sort -nr | head -n1) ; j2=$(echo "${ar2[*]}" | sort -nr | head -n2 | tail -1) ; a3=$(grep -o '[M][0-9]' mint/int_$file | wc -w) ; b3=$(grep -o '[m][0-9]' mint/int_$file | wc -w) ; c3=$(grep -o '[P][0-9]' mint/int_$file | wc -w) ; d3=$(grep -o '[A][0-9]' mint/int_$file | wc -w) ; e3=$(grep -o '[d][0-9]' mint/int_$file | wc -w) ; r=$(mint range/range_$file | perl -lne 'printf $1 if/-[MmPAd](\w+)/') ; echo $(bc -l <<< "($a/$t)")','$(bc -l <<< "($b/$t)")','$(bc -l <<< "($c/$t)")','$(bc -l <<< "($d/$t)")','$(bc -l <<< "($e/$t)")','$(bc -l <<< "($f/$t)")','$(bc -l <<< "($g/$t)")','$(bc -l <<< "($h/$t)")','$(bc -l <<< "($i/$t)")','$(bc -l <<< "($a2/$t2)")','$(bc -l <<< "($b2/$t2)")','$(bc -l <<< "($c2/$t2)")','$(bc -l <<< "($d2/$t2)")','$(bc -l <<< "($e2/$t2)")','$(bc -l <<< "($f2/$t2)")','$(bc -l <<< "($g2/$t2)")','$(bc -l <<< "($i2/$t2)")','$(bc -l <<< "($j/$i)")','$(bc -l <<< "($j2/$i2)")','$(bc -l <<< "($a3/$t)")','$(bc -l <<< "($b3/$t)")','$(bc -l <<< "($c3/$t)")','$(bc -l <<< "($d3/$t)")','$(bc -l <<< "($e3/$t)")','$(bc -l <<< "($r)")',Medieval'>>../finalClassSet.arff ; done

combines the feature extraction with range

for file in *.krn ; do t=$(grep -o '[MmPAd]' mint/int_$file | wc -w) ; a=$(grep -o '[MmPAd]1' mint/int_$file | wc -w) ; b=$(grep -o '[MmPAd]2' mint/int_$file | wc -w) ; c=$(grep -o '[MmPAd]3' mint/int_$file | wc -w) ; d=$(grep -o '[MmPAd]4' mint/int_$file | wc -w) ; e=$(grep -o '[MmPAd]5' mint/int_$file | wc -w) ; f=$(grep -o '[MmPAd]6' mint/int_$file | wc -w) ; g=$(grep -o '[MmPAd]7' mint/int_$file | wc -w) ; h=$(grep -o '[MmPAd]8' mint/int_$file | wc -w) ; ar=($a $b $c $d $e $f $g $h) ; r=$(mint range/range_$file | perl -lne 'printf $1 if/-[MmPAd](\w+)/') ; echo $(bc -l <<< "($a/$t)")','$(bc -l <<< "($b/$t)")','$(bc -l <<< "($c/$t)")','$(bc -l <<< "($d/$t)")','$(bc -l <<< "($e/$t)")','$(bc -l <<< "($f/$t)")','$(bc -l <<< "($g/$t)")','$(bc -l <<< "($h/$t)")','$(bc -l <<< "($r)")',Modern'>>../finalClassSet.arff ; done
